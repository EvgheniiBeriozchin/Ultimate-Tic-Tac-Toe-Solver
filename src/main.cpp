#include "Board.h"
#include <iostream>

using namespace std;

int main()
{
    //playable_version();

    //Initialize a board
    //Use negamax
    
    vector<int> board0 = {
        0b00000000100000000100000000100000,
        0b00000000000101000010000010000000,
        0b00000000000000101001000001001100,
        0b00000000010000000000100000000000,
        0b00000000000010000000010000010010,
        0b00000000010000010000101000000000,
        0b00000000001000000000000100000001,
        0b00000000000001000000000010000000,
        0b00000000000000001000000001001000,
        0b00000000000000000000000000000000
    };
    vector<int> board1 = {
        0b00000000000100000010000000000000,
        0b00000000000000010000001000000000,
        0b00000000001000000000000100000000,
        0b00000000000100100011000000000100,
        0b00000000000000001000000001001000,
        0b00000000000001000000000010000000,
        0b00000000100000000100000000100000,
        0b00000000010000010000101000000000,
        0b00000000100000100101000000100100,
        0b00000000000000000000000000000000
    };
    /*
    vector<int> board0 = {
        0b00000000100100001110000001101000,
        0b00000000000101001010000011001000,
        0b00000000000010001000010001011010,
        0b00000000001001000000000110000001,
        0b00000000000010000000010000010010,
        0b00000000010000010000101000000000,
        0b00000000011000000000100100000001,
        0b00000000000100100011000000000100,
        0b00000000010000011000101001001000,
        0b00000000000000000000000000000000
    };
    vector<int> board1 = {
        0b00000000000000010000001000000000,
        0b00000000010000110001101000000100,
        0b00000000010000000000100000000000,
        0b00000000110000001100100001101000,
        0b00000000000000101001000001001100,
        0b00000000100100000110000000100000,
        0b00000000000101000010000010000000,
        0b00000000001000001000000101001001,
        0b00000000101101000110000110100001,
        0b00000000000000000000000000000000
    };
    */
    Board board = Board(0, make_pair(2, 3), board0, board1);
    //Board board = Board();
    cout << negamax(board, 81, -2, 2, 1) << endl;
}



void playable_version()
{
    Board b = Board();
    bool game_finished = false;
    while (!game_finished)
    {
        cout << "It's player's " << b.get_current_player() << " move!" << endl << endl;
        //Print boards
        //1st level board
        cout << "- - - - -" << endl;
        for (int i = 0; i < 3; i++)
        {
            cout << "| ";
            for (int j = 0; j < 3; j++)
            {
                if ((b.get_board(0, 9) & (0b00000000000000000100000000000000 >> (j + 3*i))) > 0)
                {
                    cout << "x ";
                }
                else if ((b.get_board(1, 9) & (0b00000000000000000100000000000000 >> (j + 3*i))) > 0)
                {
                    cout << "o ";
                }
                else 
                {
                    cout << "  ";
                }
            }
            cout << "|" << endl;
        }
        cout << "- - - - -" << endl << endl;

        //2nd level boards
        for (int l = 0; l < 3; l++)
        {
            cout << "- - - - - - - - - - - - -" << endl;
            for (int k = 0; k < 3; k++)
            {
                for (int i = 0; i < 3; i++)
                {
                    cout << "| ";
                    for (int j = 0; j < 3; j++)
                    {
                        if ((b.get_board(0, i + 3*l) & (0b00000000000000000100000000000000 >> (j + 3*k))) > 0)
                        {
                            cout << "x ";
                        }
                        else if ((b.get_board(1, i + 3*l) & (0b00000000000000000100000000000000 >> (j + 3*k))) > 0)
                        {
                            cout << "o ";
                        }
                        else 
                        {
                            cout << "  ";
                        }
                    }
                }
                cout << "|" << endl;
            }
        }
        cout << "- - - - - - - - - - - - -" << endl << endl;
       
        int board_number, field_number;
        cin >> board_number >> field_number;
        game_finished = b.move(board_number, field_number);
    }

    cout << endl << "Game is finished! Player " << (b.get_current_player() == 0) << " won!" << endl;
}


     /*
        - - - - -
        | x o x |
        | x o x |
        | x o x |
        - - - - -

        - - - - - - - - - - - - -
        | x o x | x o x | x o x |
        | o x o | x o x | x o x |
        | x o x | x o x | x o x |
        - - - - - - - - - - - - -
        | x o x | x o x | x o x |
        | o x o | x o x | x o x |
        | x o x | x o x | x o x |
        - - - - - - - - - - - - -
        | x o x | x o x | x o x |
        | o x o | x o x | x o x |
        | x o x | x o x | x o x |
        - - - - - - - - - - - - -  
    */